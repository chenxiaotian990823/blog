import{_ as o,r as p,o as i,c as l,a as n,b as s,w as t,e as c,d as e}from"./app-DPz2NTkK.js";const r="/images/interview/bomanddom.png",d="/images/interview/navigator.png",u="/images/interview/screen.png",k={},h=n("h1",{id:"说说你对bom的理解-常见的bom对象你了解哪些",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#说说你对bom的理解-常见的bom对象你了解哪些"},[n("span",null,"说说你对BOM的理解，常见的BOM对象你了解哪些？")])],-1),m={class:"table-of-contents"},v=c('<h2 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么"><span>是什么</span></a></h2><p>BOM (Browser Object Model)，浏览器对象模型，提供了独立于内容与浏览器窗口进行交互的对象</p><p>其作用就是跟浏览器做一些交互效果,比如如何进行页面的后退，前进，刷新，浏览器的窗口发生变化，滚动条的滚动，以及获取客户的一些信息如：浏览器品牌版本，屏幕分辨率</p><p>浏览器的全部内容可以看成DOM，整个浏览器可以看成BOM。区别如下：</p><p><img src="'+r+`" alt="图片"></p><h2 id="window" tabindex="-1"><a class="header-anchor" href="#window"><span>window</span></a></h2><p>Bom的核心对象是window，它表示浏览器的一个实例</p><p>在浏览器中，window对象有双重角色，即是浏览器窗口的一个接口，又是全局对象</p><p>因此所有在全局作用域中声明的变量、函数都会变成window对象的属性和方法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;js每日一题&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">lookName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//js每日一题</span>
<span class="token function">lookName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//js每日一题</span>
window<span class="token punctuation">.</span><span class="token function">lookName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//js每日一题</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于窗口控制方法如下：</p><ul><li>moveBy(x,y)：从当前位置水平移动窗体x个像素，垂直移动窗体y个像素，x为负数，将向左移动窗体，y为负数，将向上移动窗体</li><li>moveTo(x,y)：移动窗体左上角到相对于屏幕左上角的(x,y)点</li><li>resizeBy(w,h)：相对窗体当前的大小，宽度调整w个像素，高度调整h个像素。如果参数为负值，将缩小窗体，反之扩大窗体</li><li>resizeTo(w,h)：把窗体宽度调整为w个像素，高度调整为h个像素</li><li>scrollTo(x,y)：如果有滚动条，将横向滚动条移动到相对于窗体宽度为x个像素的位置，将纵向滚动条移动到相对于窗体高度为y个像素的位置</li><li>scrollBy(x,y)： 如果有滚动条，将横向滚动条向左移动x个像素，将纵向滚动条向下移动y个像素</li><li>window.open() 既可以导航到一个特定的url，也可以打开一个新的浏览器窗口</li></ul><p>如果 window.open() 传递了第二个参数，且该参数是已有窗口或者框架的名称，那么就会在目标窗口加载第一个参数指定的URL</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;htttp://www.vue3js.cn&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;topFrame&#39;</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span> a href<span class="token operator">=</span><span class="token string">&quot; &quot;</span> target<span class="token operator">=</span><span class="token string">&quot;topFrame&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span> a<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>window.open() 会返回新窗口的引用，也就是新窗口的 window 对象</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> myWin <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;http://www.vue3js.cn&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;myWin&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>window.close() 仅用于通过 window.open() 打开的窗口</p><p>新创建的 window 对象有一个 opener 属性，该属性指向打开他的原始窗口对象</p><h2 id="location" tabindex="-1"><a class="header-anchor" href="#location"><span>location</span></a></h2><p>url地址如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>foouser<span class="token operator">:</span>barpassword@www<span class="token punctuation">.</span>wrox<span class="token punctuation">.</span>com<span class="token operator">:</span><span class="token number">80</span><span class="token operator">/</span>WileyCDA<span class="token operator">/</span><span class="token operator">?</span>q<span class="token operator">=</span>javascript#contents
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>location属性描述如下：</p><table><thead><tr><th>属性名</th><th>例子</th><th>说明</th></tr></thead><tbody><tr><td>hash</td><td>&quot;#contents&quot;</td><td>utl中#后面的字符，没有则返回空串</td></tr><tr><td>host</td><td>www.wrox.com:80</td><td>服务器名称和端口号</td></tr><tr><td>hostname</td><td>www.wrox.com</td><td>域名，不带端口号</td></tr><tr><td>href</td><td>http://www.wrox.com:80/WileyCDA/?q=javascript#contents</td><td>完整url</td></tr><tr><td>pathname</td><td>&quot;/WileyCDA/&quot;</td><td>服务器下面的文件路径</td></tr><tr><td>port</td><td>80</td><td>url的端口号，没有则为空</td></tr><tr><td>protocol</td><td>http:</td><td>url的协议，http: 或 https:</td></tr><tr><td>search</td><td>?q=javascript</td><td>url中?后面的字符，没有则返回空串</td></tr></tbody></table><p>除了 hash之外，只要修改location的一个属性，就会导致页面重新加载新URL</p><p>location.reload()，此方法可以重新刷新当前页面。这个方法会根据最有效的方式刷新页面，如果页面自上一次请求以来没有改变过，页面就会从浏览器缓存中重新加载</p><p>如果要强制从服务器中重新加载，传递一个参数true即可</p><h2 id="navigator" tabindex="-1"><a class="header-anchor" href="#navigator"><span>navigator</span></a></h2><p>navigator 对象主要用来获取浏览器的属性，区分浏览器类型。属性较多，且兼容性比较复杂</p><p>下表列出了navigator对象接口定义的属性和方法：</p><p><img src="`+d+'" alt="图片"></p><h2 id="screen" tabindex="-1"><a class="header-anchor" href="#screen"><span>screen</span></a></h2><p>保存的纯粹是客户端能力信息，也就是浏览器窗口外面的客户端显示器的信息，比如像素宽度和像素高度</p><p><img src="'+u+`" alt="图片"></p><h2 id="history" tabindex="-1"><a class="header-anchor" href="#history"><span>history</span></a></h2><p>history对象主要用来操作浏览器URL的历史记录，可以通过参数向前，向后，或者向指定URL跳转</p><p>常用的属性如下：</p><ul><li>history.go()</li></ul><p>接收一个整数数字或者字符串参数：向最近的一个记录中包含指定字符串的页面跳转，</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token string">&#39;maixaofei.com&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当参数为整数数字的时候，正数表示向前跳转指定的页面，负数为向后跳转指定的页面</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//向前跳转三个记录</span>
history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//向后跳转一个记录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>history.forward()：向前跳转一个页面</li><li>history.back()：向后跳转一个页面</li><li>history.length：获取历史记录数</li></ul>`,42);function w(g,b){const a=p("router-link");return i(),l("div",null,[h,n("nav",m,[n("ul",null,[n("li",null,[s(a,{to:"#是什么"},{default:t(()=>[e("是什么")]),_:1})]),n("li",null,[s(a,{to:"#window"},{default:t(()=>[e("window")]),_:1})]),n("li",null,[s(a,{to:"#location"},{default:t(()=>[e("location")]),_:1})]),n("li",null,[s(a,{to:"#navigator"},{default:t(()=>[e("navigator")]),_:1})]),n("li",null,[s(a,{to:"#screen"},{default:t(()=>[e("screen")]),_:1})]),n("li",null,[s(a,{to:"#history"},{default:t(()=>[e("history")]),_:1})])])]),v])}const f=o(k,[["render",w],["__file","index.html.vue"]]),x=JSON.parse('{"path":"/interview/js/bom/","title":"说说你对BOM的理解，常见的BOM对象你了解哪些？","lang":"zh-CN","frontmatter":{"title":"说说你对BOM的理解，常见的BOM对象你了解哪些？","sidebarDepth":0,"date":"2024-06-03T00:00:00.000Z"},"headers":[{"level":2,"title":"是什么","slug":"是什么","link":"#是什么","children":[]},{"level":2,"title":"window","slug":"window","link":"#window","children":[]},{"level":2,"title":"location","slug":"location","link":"#location","children":[]},{"level":2,"title":"navigator","slug":"navigator","link":"#navigator","children":[]},{"level":2,"title":"screen","slug":"screen","link":"#screen","children":[]},{"level":2,"title":"history","slug":"history","link":"#history","children":[]}],"git":{"updatedTime":1717481375000,"contributors":[{"name":"chenxt","email":"chenxt@power-www.com","commits":1}]},"filePathRelative":"interview/js/bom/index.md"}');export{f as comp,x as data};
